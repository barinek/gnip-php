= Gnip PHP API Client

This library provides a .Net API for accessing
Gnip web services.  There are two basic
roles for using Gnip: subscribers and publishers.  This library
provides a single API for both roles.

== Consumer

=== Example 1: Retrieve all recent activities at a publisher

As a consumer one thing you might be interested in immediately is to
grab recent activity at a particular publisher.  To do this you must
create a connection to Gnip using your user name and password.  Once
that connection is established you can get the publisher and request
its activities stream.


	$gnip = new Services_Gnip("me@mydomain.com", "my-password");
	$activities = $gnip->getPublisherActivities("digg");

=== Example 2: Retrieve all activities at a publisher around a specific time

Some times you will want to get activity information from before now.
Doing this look much like getting the recent activity, except that you
past a time when getting the activity stream.  This will return the
activity stream as it existed around that time.  The results will be
include some activities before and after the time you specify.

	$gnip = new Services_Gnip("me@mydomain.com", "my-password");
	$activities = $gnip->getPublisherActivities("digg", time());

=== Example 3: Create an activity stream that includes only activities
    done by users you care about.

If you would like to filter a set of publishers by the user that
performed the activity you may create a collection to do so.  Once
created a filter's activity stream is retrieved much like a
publisher's.  Activity that has already occured will not be included in
a filter.  Therefore any new filter will be empty until some
new matching activity has occured.

	$gnip = new Services_Gnip("me@mydomain.com", "my-password");

	$rules = array(new Services_Gnip_Rule("actor", "me"), 
		new Services_Gnip_Rule("actor", "you"), 
		new Services_Gnip_Rule("actor", "bob"));
	$filter = new Services_Gnip_Filter("myFilter", 'false', '', '', $rules);
	myFilter.Rules.Add(new Rule("actor", "me"));

	$gnip->createFilter("digg", $this->filter);
	$gnip->getFilterActivities("digg", $this->filter);

=== Example 4: Delete a collection

If you decide you no longer need a collection you have created in the
past you can remove it.

	$gnip = new Services_Gnip("me@mydomain.com", "my-password");

	$this->gnip->deleteFilter("digg", $this->filter);

== Publisher

=== Example 1: Create a publisher and publish some activities

If you are interested in publishing activity you will need to create a
publisher.  Once the publisher resource is created, activities can be
published in it's activity stream.

	$gnip = new Services_Gnip("me@mydomain.com", "my-password");
	
	$activity = new Services_Gnip_Activity('2008-07-02T11:16:16+00:00', 
		'upload', 'sally', 'blog_post', 'web', 
		'trains,planes,automobiles', 'bob', 'http://example.com');

        $this->gnip->publish("digg", array($activity));


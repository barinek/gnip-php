Basic Usage information for Gnip PHP module:

SUBSCRIBER:

* The PHP subscriber class is called ‘GnipSubscriber’.

* The subscriber class may be instantiated with the following line of code:
    subscriber = new GnipSubscriber(<username>, <password>);

* The subscriber class provides the following public methods (see details in
the module):
    - subscriber->get()
       - Returns the publisher activity for a specific time
    - subscriber->create_collection()
       - Creates a collection of userids from pre-created XML
    - subscriber->find_collection()
       - Gets the collection information
    - subscriber->get_collection()
       - Gets the activity of a collection
    - subscriber->updateCollection()
       - Updates a collection from pre-created XML
    - subscriber->deleteCollection()
       - Deletes a collection

PUBLISHER:

* The PHP publisher class is called ‘GnipPublisher’.

* The publisher class may be instantiated with the following line of code:
    publisher = new GnipPublisher(<username>, <password>, <publisher>);

* The publisher class provides the following public methods (see details in
the module):
    - publisher->publish()
       - Publishes activities to the Gnip server

ADDITIONAL NOTES:

* There are some minimal test cases included in the files "GnipPublisherTest"
and "GnipSubscriberTest". The test cases also provide examples of usage.
Note that you'll need to fill in the information for the constructors, 
in order for the test cases to work properly.

require_once 'Services/Gnip'

$gnip = new Services_Gnip($username, $password);

/**
 *  Get a publishers activities.
 */
$digg = $gnip->getPublisher('digg');
$gnip->getActivities($digg, [$time]);

$gnip->publish($digg, $activiies)

/**
 *  Get a collections activities.
 */
$myCollection = $gnip->getCollection('myCollection');
$gnip->getActivities($myCollection);


/**
 *  Create a collection
 */
$collection = Services_Gnip_Collection('myCollection');
$collection->uids[] = new Uid('name','publisher name');
$collection->uids[] = new Uid('name','publisher name');

$gnip->create($collection);


/**
 *  Modify a collection
 */
$collection = $gnip->getCollection('myCollection');
$collection->uids[] = new Uid('name','publisher name');

$gnip->update($collection);


/**
 *  Delete a publisher/collection
 */
$gnip->delete($digg);
$gnip->delete($collection);


